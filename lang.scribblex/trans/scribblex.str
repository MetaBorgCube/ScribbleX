module scribblex

imports
  
  completion/completion
  pp
  outline
  analysis
  global-to-local
  scrx-to-scr
  scrx-to-idris

signature // For testing

  sorts TestOutcome constructors
    SUCCEEDS : TestOutcome
    FAILS    : TestOutcome

rules // Debugging
  
  debug-show-aterm:
    (node, _, _, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := node

rules

  generate-scribble:
    (node, a, ast, path, project-path) -> None()
		with 
		  scr := <scrx-to-scr> ast
		; <write-local> (path, <guarantee-extension(|"scr")> path, scr)

rules

	generate-global-to-local: 
    (node, a, ast, path, project-path) -> None()
		with 
			filename := <guarantee-extension(|"scrx")> path
		; <global-to-local-all-module; debug; map(\ (mod, role) -> <write-local> (path, <new-role-file-name> (path, role, "scrx"), mod) \)> ast

rules

  generate-idris:
    (node, a, ast, path, project-path) -> None()
    with
      idr := <scrx-to-idris> ast
    ; <write-local> (path, <guarantee-extension(|"idr")> path, idr)

rules // helpers

	write-local:
	  (path, fname, mod) -> None()
		with
			file := <debug; fopen> (fname, "w")
		; <fprintnl> (file, [<pp-ScribbleX-string> mod])
		;	<fclose> file

	// Creates new file name based on existing filename appended by _actor
	new-role-file-name: (path, role, extension) -> (file)
		with
			(filename,_)  := <split-at-dot> (<base-filename> path)
		;	filepath			:= <concat-strings> [<dirname> path, "/", filename, "_", role]
		; file					:= <guarantee-extension(|extension)> filepath
